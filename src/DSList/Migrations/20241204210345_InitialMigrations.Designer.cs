// <auto-generated />
using DSList.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DSList.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20241204210345_InitialMigrations")]
    partial class InitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("DSList.Entities.Belonging", b =>
                {
                    b.Property<int>("ListId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("list_id");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("game_id");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER")
                        .HasColumnName("position");

                    b.HasKey("ListId", "GameId");

                    b.ToTable("tb_belonging");
                });

            modelBuilder.Entity("DSList.Entities.Game", b =>
                {
                    b.Property<long>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameYear")
                        .HasColumnType("INTEGER")
                        .HasColumnName("game_year");

                    b.Property<string>("Genre")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("genre");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("img_url");

                    b.Property<string>("LongDescription")
                        .HasColumnType("TEXT")
                        .HasColumnName("long_description");

                    b.Property<string>("Platforms")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT")
                        .HasColumnName("platforms");

                    b.Property<double?>("Score")
                        .HasColumnType("REAL")
                        .HasColumnName("score");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT")
                        .HasColumnName("short_description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.HasKey("GameId");

                    b.ToTable("tb_game");
                });

            modelBuilder.Entity("DSList.Entities.GameList", b =>
                {
                    b.Property<long>("ListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("ListId");

                    b.ToTable("tb_game_list");
                });
#pragma warning restore 612, 618
        }
    }
}
